<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600"
			   creationComplete="application1_creationCompleteHandler(event)"
			   xmlns:components="com.fusionwidgets.components.*">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>

	<fx:Script>
		<![CDATA[
			import cn.ac.iscas.gz.sems.chart.ChartTemplateDataProvider;
			import cn.ac.iscas.gz.sems.chart.ColorValueAndNumberRangeMapping;
			import cn.ac.iscas.gz.sems.chart.comp.ThermometerBox;
			import cn.ac.iscas.gz.sems.chart.service.ChartService;
			import cn.ac.iscas.gz.sems.chart.vo.ThermometerChartConfigVo;
			
			import com.fusionwidgets.components.FusionWidgets;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Label;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			
			[Bindable]
			private var objList:ArrayCollection = new ArrayCollection();
			
			private function addItemToList():void {
				var currentValue:int = Math.floor(Math.random() * 100);
				
				if(currentValue%2==0){
					currentValue = -currentValue;
				}
				
				var max:int = 100;
				var min:int = -100;
				
				var thermometerChartConfigVo:ThermometerChartConfigVo = new ThermometerChartConfigVo();
				thermometerChartConfigVo.upperLimit = max;
				thermometerChartConfigVo.lowerLimit = min;
				thermometerChartConfigVo.currentValue = currentValue;
				thermometerChartConfigVo.themeFillColor = ColorValueAndNumberRangeMapping.getColorByNumber(max,min,currentValue);
				thermometerChartConfigVo.width = 120;
				thermometerChartConfigVo.height = 200;
				thermometerChartConfigVo.chartDesc = "温度计 " + currentValue;
				thermometerChartConfigVo.uid = "000" + Math.abs(currentValue);
				
				var chartService:ChartService = new ChartService();
				var trBox:ThermometerBox = chartService.createThermometerBox(thermometerChartConfigVo);
				
				objList.addItem({
					xmlDataText : ChartTemplateDataProvider.getThermometerChartTemplateData(thermometerChartConfigVo),
					desc : thermometerChartConfigVo.chartDesc,
					uid : thermometerChartConfigVo.uid
				});
			}

			protected function application1_creationCompleteHandler(event:FlexEvent):void
			{
				for(var i:int=0;i<100;i++){
					addItemToList();
				}
				thermometerTileList.dataProvider = objList;
			}

		]]>
	</fx:Script>

	<s:VGroup x="0" y="0" width="100%" height="100%">
		<mx:TileList id="thermometerTileList"
					 width="100%" height="100%" 
					 selectable="true" selectedIndex="0" 
					 direction="horizontal"
					  contentBackgroundColor="#000000">
			<mx:itemRenderer>
				<fx:Component>
					<mx:VBox 
						horizontalAlign="center" verticalAlign="middle"
						width="100" height="200"
						creationComplete="init(event)"
						>
						<fx:Script>
							<![CDATA[
								import mx.events.FlexEvent;
								
								public var _uid:String;

								protected function init(event:FlexEvent):void
								{
									this._uid = data.uid;
								}

							]]>
							
						</fx:Script>
						<components:FusionWidgets id="thermometerWidget" width="100%" height="90%" FCDataXML="{data.xmlDataText}" FCChartType="Thermometer"/>
						<s:Label id="descLabel" text="{data.desc}"/>
					</mx:VBox>
				</fx:Component>
			</mx:itemRenderer>
		</mx:TileList>
		
	</s:VGroup>
</s:Application>
